import java.io.*;
import java.net.*;
/**
 * This program is a client UI that connects to a server that will respond to
 * knock knock jokes according to which part of the joke is said.
 * The program, upon clicking the connect button, will instantiate a socket with
 * the given IP and port. The default will get to a server which is running a 
 * knock knock protocol. Once a message is typed in the send text field, a user
 * can hit send and the message will be sent to the server. The server will
 * respond according to the message sent. The socket will be closed when either
 * the user hits the disconnect button, or the user sends quit to the server.
 * @author Logan
 */
public class Client_UI extends javax.swing.JFrame {
    Socket clientSocket;
    PrintWriter PW;
    BufferedReader Buffer;
    /**
     * Creates new form Client_UI
     */
    public Client_UI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Txtfld_IPAddress = new javax.swing.JTextField();
        Txtfld_Port = new javax.swing.JTextField();
        Button_Connect = new javax.swing.JButton();
        Label_Message = new javax.swing.JLabel();
        Txtfld_Message = new javax.swing.JTextField();
        Button_Send = new javax.swing.JButton();
        Label_Communication = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Txtarea_Communication = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("IP Address");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Port Number");

        Txtfld_IPAddress.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Txtfld_IPAddress.setText("io.uwplatt.edu");

        Txtfld_Port.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Txtfld_Port.setText("5764");

        Button_Connect.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Button_Connect.setText("Connect");
        Button_Connect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_ConnectActionPerformed(evt);
            }
        });

        Label_Message.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Label_Message.setText("Message to Server");

        Txtfld_Message.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        Button_Send.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Button_Send.setText("Send");
        Button_Send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_SendActionPerformed(evt);
            }
        });

        Label_Communication.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Label_Communication.setText("Client/Server Communication");

        jScrollPane1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        Txtarea_Communication.setEditable(false);
        Txtarea_Communication.setColumns(20);
        Txtarea_Communication.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        Txtarea_Communication.setRows(5);
        jScrollPane1.setViewportView(Txtarea_Communication);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addComponent(Txtfld_Message, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Txtfld_IPAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(Txtfld_Port, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(27, 27, 27)
                                        .addComponent(Button_Connect))))
                            .addComponent(Label_Message)
                            .addComponent(Button_Send)
                            .addComponent(Label_Communication))
                        .addGap(0, 302, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(Txtfld_IPAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(Txtfld_Port, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Button_Connect))
                .addGap(46, 46, 46)
                .addComponent(Label_Message)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Txtfld_Message, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Button_Send)
                .addGap(18, 18, 18)
                .addComponent(Label_Communication)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 337, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel1.getAccessibleContext().setAccessibleName("Label_IP");
        jLabel2.getAccessibleContext().setAccessibleName("Label_Port");
        Txtfld_IPAddress.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Button_ConnectActionPerformed connects the client to the given server.
     * Once clicked, the client will create a socket with the given IP and port.
     * Once connect, the text of the connect button will change to say disconnect.
     * If clicked while button says disconnect, the client will close the connection
     * with the socket and change the text back to say connect.
     * @param evt 
     */
    private void Button_ConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_ConnectActionPerformed
        if (Button_Connect.getText().equals("Connect"))
        {
            try
            {
                int Port = Integer.parseInt(Txtfld_Port.getText());
                clientSocket = new Socket (Txtfld_IPAddress.getText(), Port);
                PW = new PrintWriter(System.out);
                Buffer = new BufferedReader(new InputStreamReader(clientSocket.getInputStream()));
                Button_Connect.setText("Disconnect");
                Txtarea_Communication.append("Connected to Server\n");
            }
            catch (UnknownHostException e)
            {
                Txtarea_Communication.append("Failed to Connect to Server\n");
            }
            catch (IOException e)
            {
                Txtarea_Communication.append("Failed to Create Socket\n");
            }
            catch (IllegalArgumentException e)
            {
                Txtarea_Communication.append("Port is outside of valid range\n");
            }
        }
        else
        {
            try
            {
                clientSocket.close();
                Button_Connect.setText("Connect");
                Txtarea_Communication.append("Disconnected!\n");
            }
            catch (SocketException e)
            {
                Txtarea_Communication.append("Thread blocked in IO operation.\n");
            }
            catch (IOException e)
            {
                Txtarea_Communication.append("IO error while closing.\n");
            }
            
        }
    }//GEN-LAST:event_Button_ConnectActionPerformed
    /**
     * Button_SendActionPerformed will send a given message to the connected server.
     * A output stream to the server is established  and a typed message will be
     * sent to the server. Both the typed message and the server's response will
     * be put into the text area for viewing. if the user sends quit to the server,
     * the user will be disconnect from the server and the text on the disconnect
     * button will change to connect.
     * @param evt 
     */
    private void Button_SendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_SendActionPerformed
        try 
        {
            DataOutputStream toServer = new DataOutputStream(clientSocket.getOutputStream());
            PW.println("Client: " + Txtfld_Message.getText());
            Txtarea_Communication.append("Client: " + Txtfld_Message.getText() + "\n");
            toServer.writeBytes(Txtfld_Message.getText() + '\n');
            String lastMessage = Buffer.readLine();
            PW.println("Server: " + lastMessage);
            Txtarea_Communication.append("Server: " + lastMessage + "\n");
            if (lastMessage.equals("Good Bye!"))
            {
		try
                {
                    clientSocket.close();
                    Button_Connect.setText("Connect");
                    Txtarea_Communication.append("Disconnected!\n");
                }
                catch (SocketException e)
                {
                    Txtarea_Communication.append("Thread blocked in IO operation.\n");
                }
                catch (IOException e)
                {
                    Txtarea_Communication.append("IO error while closing.\n");
                }
            }
            Txtfld_Message.setText("");
        }
        catch (IOException e)
        {
            Txtarea_Communication.append("Error connecting to server.\n");
        }
        catch (Exception e)
        {
            Txtarea_Communication.append("Error.\n");
        }
    }//GEN-LAST:event_Button_SendActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Client_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Client_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Client_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Client_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Client_UI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Button_Connect;
    private javax.swing.JButton Button_Send;
    private javax.swing.JLabel Label_Communication;
    private javax.swing.JLabel Label_Message;
    private javax.swing.JTextArea Txtarea_Communication;
    private javax.swing.JTextField Txtfld_IPAddress;
    private javax.swing.JTextField Txtfld_Message;
    private javax.swing.JTextField Txtfld_Port;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
